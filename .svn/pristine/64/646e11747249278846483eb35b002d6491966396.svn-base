package com.smyhvae.myapplication;

import android.app.Activity;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AlertDialog;
import android.text.Editable;
import android.text.InputType;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.DisplayMetrics;
import android.util.Log;
import android.util.TypedValue;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.smyhvae.model.FuBaseModel;
import com.smyhvae.model.FuExtraMoneyFixModel;
import com.smyhvae.model.FuMoneyAccountModel;
import com.smyhvae.model.FuMoneyModel;
import com.smyhvae.model.FuSalesBillDetailModel;
import com.smyhvae.model.FuSalesBillModel;
import com.smyhvae.service.BaseService;
import com.smyhvae.service.SalesBillService;
import com.smyhvae.util.BigDecimalUtil;
import com.smyhvae.util.DataUtil;
import com.smyhvae.util.DialogUtil;
import com.smyhvae.util.Logcat;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class PaymentActivity extends Activity implements View.OnClickListener {

    private MyApplication application;
    private String accessKey;
    private int accountid;
    private int loginstaffid;
    private int logininvid;
    private String webServerUrl;
    int w_screen=0;
    int h_screen=0;

    private TextView backView;
    private TextView paymentinfo;
    private TextView payView;

    private EditText et_clientString;
    private EditText et_arrears;
    private EditText et_totalString;
    private EditText et_finalTotal;
    private EditText et_totalSum;

    private LinearLayout money_fix_lay;

    private EditText cash;
    private EditText swingCard;
    private EditText remit;
    private EditText alipay;
    private EditText wechatpay;

    private Button cashButton;
    private Button swingCardButton;
    private Button remitButton;
    private Button alipayButton;
    private Button wechatpayButton;

    private Spinner spinner_bank1;
    private Spinner spinner_bank2;

    private FuSalesBillModel salesBillModel = new FuSalesBillModel();
    private List<FuSalesBillDetailModel> salesBillDetailList = new ArrayList<>();
    private List<FuExtraMoneyFixModel> extraMoneyFixModelList = new ArrayList<>();
    private List<FuMoneyAccountModel> moneyAccountModelList = new ArrayList<>();
    private List<FuMoneyModel> moneyList = new ArrayList<>();
    private BigDecimalUtil bigDecimalUtil = new BigDecimalUtil();

    private BigDecimal total = new BigDecimal(0);
    private BigDecimal money = new BigDecimal(0);
    private Integer moneyaccountid1;
    private Integer moneyaccountid2;
    private Integer moneyaccountidForAlipay;
    private Integer moneyaccountid2ForWechat;

    private Handler mhandler  = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            if (msg.what == 1) {
                total = new BigDecimal(0);
                for (FuExtraMoneyFixModel fuExtraMoneyFixModel : list){
                    if (fuExtraMoneyFixModel.getMoneyfix() != null){
                        if (fuExtraMoneyFixModel.getBalancetype().intValue()==0){
                            total = total.subtract(fuExtraMoneyFixModel.getMoneyfix());
                        }else if (fuExtraMoneyFixModel.getBalancetype().intValue()==1){
                            total = total.add(fuExtraMoneyFixModel.getMoneyfix());
                        }
                    }
                }
                et_totalString.setText(bigDecimalUtil.getStringUtil(salesBillModel.getTotal().add(total).toString()));
                if (salesBillModel.getClientid() != null){
                    et_totalSum.setText(bigDecimalUtil.getStringUtil(salesBillModel.getArrears().add(salesBillModel.getTotal()).add(total).toString()));
                }else {
                    et_totalSum.setText(bigDecimalUtil.getStringUtil(salesBillModel.getTotal().add(total).toString()));
                }
            }else if (msg.what == 2){
                money = new BigDecimal(0);
                for (FuMoneyModel fuMoneyModel : moneyList){
                    if (fuMoneyModel.getMoney() != null){
                        money = money.add(fuMoneyModel.getMoney());
                    }
                }
                et_finalTotal.setText(bigDecimalUtil.getStringUtil(money.toString()));
            }
        }
    };

    private Handler handler = new Handler() {

        public void handleMessage(Message msg) {

            if (msg.what==0){
                DataUtil dataUtil = new DataUtil();
                FuBaseModel baseModel = dataUtil.message(msg.obj.toString());
                if(baseModel.getResultCode().intValue() ==1){
                    extraMoneyFixModelList = dataUtil.getExtraMoneyFixListData(msg.obj.toString());
                    appendView();
                }else if(baseModel.getResultCode().intValue() ==0){
                    DialogUtil.showDialog(PaymentActivity.this, baseModel.getMessage(), false);
                }
            }else if (msg.what==1){
                DataUtil dataUtil = new DataUtil();
                FuBaseModel baseModel = dataUtil.message(msg.obj.toString());
                if(baseModel.getResultCode().intValue() ==1){
                    moneyAccountModelList = dataUtil.getMonetAccountListData(msg.obj.toString());
                    final List<String> list = new ArrayList<>();
                    final List<Integer> list1 = new ArrayList<>();
                    for(int i = 0; i < moneyAccountModelList.size(); i++){
                        String name = moneyAccountModelList.get(i).getName();
                        Integer id = moneyAccountModelList.get(i).getId();

                        if (name.equals("支付宝") && moneyAccountModelList.get(i).getFirmware().intValue()==1){
                            moneyaccountidForAlipay = moneyAccountModelList.get(i).getId();
                        }

                        if (name.equals("微信") && moneyAccountModelList.get(i).getFirmware().intValue()==1){
                            moneyaccountid2ForWechat = moneyAccountModelList.get(i).getId();
                        }

                        list.add(name);
                        list1.add(id);
                    }
                    ArrayAdapter<String> aa=new ArrayAdapter<String>(PaymentActivity.this, android.R.layout.simple_spinner_item, list);
                    //设置为下拉式Item格式
                    aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                    spinner_bank1.setAdapter(aa);
                    spinner_bank2.setAdapter(aa);
                    spinner_bank1.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                        @Override
                        public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                            moneyaccountid1 = list1.get(i);
                        }
                        @Override
                        public void onNothingSelected(AdapterView<?> adapterView) {

                        }
                    });
                    //添加监听
                    AdapterView.OnItemSelectedListener otsc=new AdapterView.OnItemSelectedListener(){
                        public void onItemSelected(AdapterView<?> arg0, View arg1,int arg2, long arg3) {
                            moneyaccountid2 = list1.get(arg2);
                        }
                        public void onNothingSelected(AdapterView<?> arg0) {

                        }
                    };
                    spinner_bank2.setOnItemSelectedListener(otsc);

                }else if(baseModel.getResultCode().intValue() ==0){
                    DialogUtil.showDialog(PaymentActivity.this, baseModel.getMessage(), false);
                }
            }

        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);

        setContentView(R.layout.activity_payment);
        application = (MyApplication) getApplication().getApplicationContext();
        accessKey = application.getAccessKey();
        accountid = application.getFuStaffModel().getAccountid();
        loginstaffid = application.getFuStaffModel().getId();
        logininvid = application.getFuStaffModel().getFuInventoryList().get(0).getId();
        webServerUrl = application.getWebServerUrl();
        DisplayMetrics dm =getResources().getDisplayMetrics();
        w_screen = dm.widthPixels;
        h_screen = dm.heightPixels;

        Intent intent = getIntent();
        salesBillModel = (FuSalesBillModel) intent.getSerializableExtra("salesBillModel");
        salesBillDetailList = (List<FuSalesBillDetailModel>) intent.getSerializableExtra("salesBillDetailList");

        initView();

        new Thread(){
            @Override
            public void run() {
                String result = null;
                for (int i=0; i<2; i++){
                    BaseService baseService = new BaseService();
                    if (i==0){
                        result = baseService.doList(webServerUrl, loginstaffid, logininvid, accessKey, accountid, "extraMoneyFix", "extraMoneyFixList");
                    }else if (i==1){
                        result = baseService.doList(webServerUrl, loginstaffid, logininvid, accessKey, accountid, "moneyAccount", "fuMoneyAccountList");
                    }
                    Logcat.show(result);
                    Message msg = Message.obtain();
                    msg.obj = result;
                    msg.what = i;
                    handler.sendMessage(msg);
                }
            }
        }.start();

    }

    public void initView(){
        backView = findViewById(R.id.backView);
        backView.setOnClickListener(this);
        paymentinfo = findViewById(R.id.paymentinfo);
        payView = findViewById(R.id.payView);
        payView.setOnClickListener(this);
        paymentinfo.setWidth(w_screen/2);
        LinearLayout.LayoutParams infoParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
        infoParams.gravity= Gravity.CENTER_HORIZONTAL|Gravity.CENTER_VERTICAL;
        infoParams.setMargins(w_screen/4, 0, 10, 0);
        paymentinfo.setLayoutParams(infoParams);

        et_clientString = findViewById(R.id.et_clientString);
        et_clientString.setWidth(w_screen/4);
        et_clientString.setText(salesBillModel.getClientString());
        et_clientString.setTextColor(Color.BLACK);
        et_arrears = findViewById(R.id.et_arrears);
        et_arrears.setWidth(w_screen/4);
        if (salesBillModel.getClientid() != null){
            et_arrears.setText(salesBillModel.getArrears().toString());
        }
        et_arrears.setTextColor(Color.RED);
        et_totalString = findViewById(R.id.et_totalString);
        et_totalString.setWidth(w_screen/4);
        et_totalString.setTextColor(Color.RED);
        if(salesBillModel.getTotal() != null){
            et_totalString.setText(bigDecimalUtil.getStringUtil(salesBillModel.getTotal().toString()));
        }else {
            et_totalString.setText("0");
            salesBillModel.setTotal(new BigDecimal(0));
        }
        et_finalTotal = findViewById(R.id.et_finalTotal);
        et_finalTotal.setWidth(w_screen/4);
        et_finalTotal.setTextColor(Color.RED);
        et_totalSum = findViewById(R.id.et_totalSum);
        et_totalSum.setWidth(w_screen/4);
        et_totalSum.setTextColor(Color.RED);
        if (salesBillModel.getClientid() != null){
            et_totalSum.setText(bigDecimalUtil.getStringUtil(salesBillModel.getArrears().add(salesBillModel.getTotal()).toString()));
        }else{
            et_totalSum.setText(bigDecimalUtil.getStringUtil(salesBillModel.getTotal().toString()));
        }

        money_fix_lay = findViewById(R.id.money_fix_lay);

        cash = findViewById(R.id.cash);
        cash.setWidth(w_screen/4);
        cash.setTextColor(Color.parseColor("#006400"));
        cash.setInputType(InputType.TYPE_CLASS_NUMBER);

        final FuMoneyModel fuMoneyModel = new FuMoneyModel();
        cash.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
            }
            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                if (!TextUtils.isEmpty(cash.getText().toString())){
                    fuMoneyModel.setPaymentid(1);
                    fuMoneyModel.setMoney(new BigDecimal(cash.getText().toString()));
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }else {
                    fuMoneyModel.setMoney(null);
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }

            }

            @Override
            public void afterTextChanged(Editable editable) {
            }
        });
        moneyList.add(fuMoneyModel);

        final FuMoneyModel fuMoneyModel1 = new FuMoneyModel();
        swingCard = findViewById(R.id.swingCard);
        swingCard.setWidth(w_screen/4);
        swingCard.setTextColor(Color.parseColor("#006400"));
        swingCard.setInputType(InputType.TYPE_CLASS_NUMBER);
        swingCard.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                if (!TextUtils.isEmpty(swingCard.getText().toString())){
                    fuMoneyModel1.setPaymentid(2);
                    fuMoneyModel1.setMoneyaccountid(moneyaccountid1);
                    fuMoneyModel1.setMoney(new BigDecimal(swingCard.getText().toString()));
                    fuMoneyModel1.setType(1);
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }else {
                    fuMoneyModel1.setMoney(null);
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }
            }

            @Override
            public void afterTextChanged(Editable editable) {
            }
        });
        moneyList.add(fuMoneyModel1);
        remit = findViewById(R.id.remit);
        remit.setWidth(w_screen/4);
        remit.setTextColor(Color.parseColor("#006400"));
        remit.setInputType(InputType.TYPE_CLASS_NUMBER);
        final FuMoneyModel fuMoneyModel2 = new FuMoneyModel();
        remit.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                if (!TextUtils.isEmpty(remit.getText().toString())){
                    fuMoneyModel2.setPaymentid(3);
                    fuMoneyModel2.setMoneyaccountid(moneyaccountid2);
                    fuMoneyModel2.setMoney(new BigDecimal(remit.getText().toString()));
                    fuMoneyModel2.setType(2);
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }else {
                    fuMoneyModel2.setMoney(null);
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }
            }

            @Override
            public void afterTextChanged(Editable editable) {
            }
        });
        moneyList.add(fuMoneyModel2);
        alipay = findViewById(R.id.alipay);
        alipay.setWidth(w_screen/4);
        alipay.setTextColor(Color.parseColor("#006400"));
        alipay.setInputType(InputType.TYPE_CLASS_NUMBER);
        final FuMoneyModel fuMoneyModel3 = new FuMoneyModel();
        alipay.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                if (!TextUtils.isEmpty(alipay.getText().toString())){
                    fuMoneyModel3.setPaymentid(3);
                    fuMoneyModel3.setMoneyaccountid(moneyaccountidForAlipay);
                    fuMoneyModel3.setMoney(new BigDecimal(alipay.getText().toString()));
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }else {
                    fuMoneyModel3.setMoney(null);
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }
            }

            @Override
            public void afterTextChanged(Editable editable) {
            }
        });
        moneyList.add(fuMoneyModel3);
        wechatpay = findViewById(R.id.wechatpay);
        wechatpay.setWidth(w_screen/4);
        wechatpay.setTextColor(Color.parseColor("#006400"));
        wechatpay.setInputType(InputType.TYPE_CLASS_NUMBER);
        final FuMoneyModel fuMoneyModel4 = new FuMoneyModel();
        wechatpay.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                if (!TextUtils.isEmpty(wechatpay.getText().toString())){
                    fuMoneyModel4.setPaymentid(3);
                    fuMoneyModel4.setMoneyaccountid(moneyaccountid2ForWechat);
                    fuMoneyModel4.setMoney(new BigDecimal(wechatpay.getText().toString()));
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }else {
                    fuMoneyModel4.setMoney(null);
                    Message msg = new Message();
                    msg.what = 2;
                    msg.obj = moneyList;
                    mhandler.sendMessage(msg);
                }
            }

            @Override
            public void afterTextChanged(Editable editable) {
            }
        });
        moneyList.add(fuMoneyModel4);

        cashButton = findViewById(R.id.cashButton);
        swingCardButton = findViewById(R.id.swingCardButton);
        remitButton = findViewById(R.id.remitButton);
        alipayButton = findViewById(R.id.alipayButton);
        wechatpayButton = findViewById(R.id.wechatpayButton);

        cashButton.setOnClickListener(this);
        swingCardButton.setOnClickListener(this);
        remitButton.setOnClickListener(this);
        alipayButton.setOnClickListener(this);
        wechatpayButton.setOnClickListener(this);

        spinner_bank1 = findViewById(R.id.spinner_bank1);
        spinner_bank2 = findViewById(R.id.spinner_bank2);

    }

    private List<FuExtraMoneyFixModel> list = new ArrayList<>();

    public void  appendView(){
        int size = extraMoneyFixModelList.size();

        int count = (int) Math.ceil(new BigDecimal(size).divide(new BigDecimal(2)).doubleValue());
        int j = 0;
        for (int i=0; i<count; i++){
            final FuExtraMoneyFixModel fuExtraMoneyFixModel = extraMoneyFixModelList.get(j);
            LinearLayout linearLayout = new LinearLayout(this);
            linearLayout.setOrientation(LinearLayout.HORIZONTAL);
            TextView textView1 = new TextView(this);
            textView1.setText(fuExtraMoneyFixModel.getName());
            if (fuExtraMoneyFixModel.getBalancetype().intValue()==0){
                textView1.setTextColor(Color.RED);
            }else if(fuExtraMoneyFixModel.getBalancetype().intValue()==1){
                textView1.setTextColor(Color.parseColor("#006400"));
            }
            textView1.setWidth(w_screen/6);
            textView1.setGravity(Gravity.RIGHT);
            LinearLayout.LayoutParams lparams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
            lparams.gravity=Gravity.CENTER_HORIZONTAL|Gravity.CENTER_VERTICAL;
            lparams.setMargins(0,0,20,0);
            textView1.setLayoutParams(lparams);
            textView1.setSingleLine(true);
            textView1.setEllipsize(TextUtils.TruncateAt.END);
            final EditText editText1 = new EditText(this);
            editText1.setWidth(w_screen/4);
            editText1.setHint("请填写金额");
            editText1.setPadding(5, 15, 5, 15);
            editText1.setSingleLine(true);
            editText1.setEllipsize(TextUtils.TruncateAt.END);
            editText1.setBackground(getResources().getDrawable(R.drawable.bg_edittext));
            editText1.setTextSize(TypedValue.COMPLEX_UNIT_PX, 40);
            editText1.setInputType(InputType.TYPE_CLASS_NUMBER);


            linearLayout.addView(textView1);
            linearLayout.addView(editText1);


            editText1.addTextChangedListener(new TextWatcher() {
                @Override
                public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                }

                @Override
                public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                    if (!TextUtils.isEmpty(editText1.getText().toString())){
                        fuExtraMoneyFixModel.setMoneyfix(new BigDecimal(editText1.getText().toString()));
                        Message msg = new Message();
                        msg.what = 1;
                        msg.obj = list;
                        mhandler.sendMessage(msg);
                    }else {
                        fuExtraMoneyFixModel.setMoneyfix(null);
                        Message msg = new Message();
                        msg.what = 1;
                        msg.obj = list;
                        mhandler.sendMessage(msg);
                    }

                }
                @Override
                public void afterTextChanged(Editable editable) {
                }
            });
            LinearLayout.LayoutParams lparams1 = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
            lparams1.gravity=Gravity.CENTER_HORIZONTAL|Gravity.CENTER_VERTICAL;
            lparams1.setMargins(0,20,0,20);
            linearLayout.setLayoutParams(lparams1);
            money_fix_lay.addView(linearLayout);
            list.add(fuExtraMoneyFixModel);
            j++;
            TextView textView2 = new TextView(this);
            textView2.setWidth(w_screen/6);
            textView2.setGravity(Gravity.RIGHT);
            textView2.setLayoutParams(lparams);
            textView2.setSingleLine(true);
            textView2.setEllipsize(TextUtils.TruncateAt.END);
            final EditText editText2 = new EditText(this);
            editText2.setWidth(w_screen/4);
            editText2.setHint("请填写金额");
            editText2.setPadding(5, 15, 5, 15);
            editText2.setSingleLine(true);
            editText2.setEllipsize(TextUtils.TruncateAt.END);
            editText2.setBackground(getResources().getDrawable(R.drawable.bg_edittext));
            editText2.setTextSize(TypedValue.COMPLEX_UNIT_PX, 40);
            editText2.setInputType(InputType.TYPE_CLASS_NUMBER);

            linearLayout.addView(textView2);
            linearLayout.addView(editText2);

           if(j<size) {
               final FuExtraMoneyFixModel extraMoneyFixModel = extraMoneyFixModelList.get(j);
               textView2.setText(extraMoneyFixModel.getName());
               if (extraMoneyFixModel.getBalancetype().intValue() == 0) {
                   textView2.setTextColor(Color.RED);
               } else if (extraMoneyFixModel.getBalancetype().intValue() == 1) {
                   textView2.setTextColor(Color.parseColor("#006400"));
               }

               editText2.addTextChangedListener(new TextWatcher() {
                   @Override
                   public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                   }

                   @Override
                   public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                       if (!TextUtils.isEmpty(editText2.getText().toString())){
                           extraMoneyFixModel.setMoneyfix(new BigDecimal(editText2.getText().toString()));
                           Message msg = new Message();
                           msg.what = 1;
                           msg.obj = list;
                           mhandler.sendMessage(msg);
                       }else {
                           extraMoneyFixModel.setMoneyfix(null);
                           Message msg = new Message();
                           msg.what = 1;
                           msg.obj = list;
                           mhandler.sendMessage(msg);
                       }

                   }
                   @Override
                   public void afterTextChanged(Editable editable) {
                   }
               });
               list.add(extraMoneyFixModel);
               j++;
           }
           else
           {
               textView2.setVisibility(View.INVISIBLE);
               editText2.setVisibility(View.INVISIBLE);
           }
        }
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.backView:
                Intent myIntent = new Intent(PaymentActivity.this, MainActivity.class);
                setResult(RESULT_FIRST_USER, myIntent);
                finish();
                break;
            case R.id.payView:
                Log.d("sfn", salesBillModel.getClientid()+"");
                if(salesBillModel.getClientid() != null){
                    doAdd();
                } else {
                    BigDecimal sumMoney = new BigDecimal(0);
                    if (!TextUtils.isEmpty(cash.getText().toString())){
                        sumMoney = sumMoney.add(new BigDecimal(cash.getText().toString()));
                    }
                    if (!TextUtils.isEmpty(swingCard.getText().toString())){
                        sumMoney = sumMoney.add(new BigDecimal(swingCard.getText().toString()));
                    }
                    if (!TextUtils.isEmpty(remit.getText().toString())){
                        sumMoney = sumMoney.add(new BigDecimal(remit.getText().toString()));
                    }
                    if (!TextUtils.isEmpty(alipay.getText().toString())){
                        sumMoney = sumMoney.add(new BigDecimal(alipay.getText().toString()));
                    }
                    if (!TextUtils.isEmpty(wechatpay.getText().toString())){
                        sumMoney = sumMoney.add(new BigDecimal(wechatpay.getText().toString()));
                    }
                    if(sumMoney.compareTo(new BigDecimal(et_totalString.getText().toString())) ==0){
                        Log.d("sfn", sumMoney+"*"+et_totalString.getText().toString());
                        doAdd();
                    }else {
                        new  AlertDialog.Builder(this) .setTitle("警告！" ) .setMessage("与应收额不一致！" )
                                .setNegativeButton("确定", new DialogInterface.OnClickListener() {
                                    @Override
                                    public void onClick(DialogInterface dialog, int i) {
                                        dialog.dismiss();
                                    }
                                }) .show();
                    }
                }


                break;
            case R.id.cashButton:
                reset();
                cash.setText(bigDecimalUtil.getStringUtil(salesBillModel.getTotal().toString()));
                break;
            case R.id.swingCardButton:
                reset();
                swingCard.setText(bigDecimalUtil.getStringUtil(salesBillModel.getTotal().toString()));
                break;
            case R.id.remitButton:
                reset();
                remit.setText(bigDecimalUtil.getStringUtil(salesBillModel.getTotal().toString()));
                break;
            case R.id.alipayButton:
                reset();
                alipay.setText(bigDecimalUtil.getStringUtil(salesBillModel.getTotal().toString()));
                break;
            case R.id.wechatpayButton:
                reset();
                wechatpay.setText(bigDecimalUtil.getStringUtil(salesBillModel.getTotal().toString()));
                break;
            default:
                break;

        }
    }

    public void doAdd(){
        new  AlertDialog.Builder(this) .setTitle("确认" ) .setMessage("您确定要支付吗？" )
                .setPositiveButton("是", new DialogInterface.OnClickListener() {
                    public static final int CODE = 0;

                    @Override
                    public void onClick(DialogInterface dialog, int i) {
                        dialog.dismiss();
                        List<FuMoneyModel> fuMoneyModelList = new ArrayList<>();
                        for (FuMoneyModel moneyModel: moneyList){
                            FuMoneyModel fuMoneyModel = new FuMoneyModel();

                            if (moneyModel.getType() != null){
                                if (moneyModel.getType().intValue()==1){
                                    moneyModel.setMoneyaccountid(moneyaccountid1);
                                }
                                if (moneyModel.getType().intValue()==2){
                                    moneyModel.setMoneyaccountid(moneyaccountid2);
                                }
                            }
                            if (moneyModel.getMoney() != null){
                                fuMoneyModel.setPaymentid(moneyModel.getPaymentid());
                                fuMoneyModel.setMoneyaccountid(moneyModel.getMoneyaccountid());
                                fuMoneyModel.setMoney(moneyModel.getMoney());
                                fuMoneyModel.setType(moneyModel.getType());
                                fuMoneyModelList.add(fuMoneyModel);
                            }
                        }
                        for (FuExtraMoneyFixModel extraMoneyFixModel : list){
                            FuSalesBillDetailModel salesBillDetailModel = new FuSalesBillDetailModel();
                            if (extraMoneyFixModel.getMoneyfix() != null){
                                salesBillDetailModel.setExtramoneyfixid(extraMoneyFixModel.getId());
                                salesBillDetailModel.setTotal(extraMoneyFixModel.getMoneyfix());
                                salesBillDetailModel.setPrice(new BigDecimal(0));
                                salesBillDetailModel.setDiscount(new BigDecimal(0));
                                salesBillDetailModel.setAmount(0);
                                salesBillDetailList.add(salesBillDetailModel);
                            }
                        }

                        SalesBillService salesBillService = new SalesBillService();
                        String result = salesBillService.doAddSalesBill(webServerUrl, loginstaffid, logininvid, accessKey, accountid, salesBillModel, salesBillDetailList, fuMoneyModelList);
                        Logcat.show(result);
                        DataUtil dataUtil = new DataUtil();
                        FuBaseModel baseModel = dataUtil.message(result);
                        if(baseModel.getResultCode().intValue() ==1){
                            Intent myIntent = new Intent(PaymentActivity.this, MainActivity.class);
                            setResult(CODE, myIntent);
                            Toast toast = Toast.makeText(getApplication(), baseModel.getMessage(), Toast.LENGTH_LONG);
                            toast.setGravity(Gravity.CENTER, 0, 0);
                            toast.show();
                            finish();
                            PaymentActivity.this.onDestroy();
                        }else if(baseModel.getResultCode().intValue() ==0){
                            DialogUtil.showDialog(PaymentActivity.this, baseModel.getMessage(), false);
                        }


                    }
                }) .setNegativeButton("否", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int i) {
                dialog.dismiss();
            }
        }) .show();
    }

    public void reset(){
        cash.setText("");
        swingCard.setText("");
        remit.setText("");
        alipay.setText("");
        wechatpay.setText("");
    }

}
