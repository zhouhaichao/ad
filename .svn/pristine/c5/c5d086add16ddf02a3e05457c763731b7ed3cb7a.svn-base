package com.smyhvae.util;

import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;

public class BaseProtocol {
    private StringBuilder sb = new StringBuilder();

    private HttpClient httpClient = new DefaultHttpClient();
    private HttpPost httpRequest;
    private HttpResponse response;

    private List<NameValuePair> nameValuePair = new ArrayList<NameValuePair>();

    BaseProtocol(){
    }

    /**
     *向服务器端发送请求
     *
     *@paramurl
     *@throwsException
     */
    protected void pack(String url)throws Exception{
        httpClient = new DefaultHttpClient();
        httpRequest = new HttpPost(url);

        httpRequest.setEntity(new UrlEncodedFormEntity(nameValuePair));
        response=httpClient.execute(httpRequest);
    }

    /**
     *得到返回数据
     *
     *@paramurl
     *@return
     *@throwsException
     */
    protected void parse()throws Exception{
        if(response.getStatusLine().getStatusCode()==200){

            BufferedReader bufferedReader2 =new BufferedReader(
                    new InputStreamReader(response.getEntity().getContent()));
            for(String s=bufferedReader2.readLine();s!=null;s=bufferedReader2.readLine()){
                sb.append(s);
            }
        }
    }

    /**
     *向服务器发送信息
     *
     *@paramkey
     *@paramvalue
     */
    public void addNameValuePair(String key, String value){
        nameValuePair.add(new BasicNameValuePair(key, value));
    }

    /**
     *返回JSONObject对象数据模型
     *
     *@return
     *@throwsJSONException
     */
    public JSONObject getJSON() throws JSONException {
        return new JSONObject(sb.toString());
    }
}
